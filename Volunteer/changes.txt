server.js

app.get('/volunteer/getTasks', async (req, res) => {
  console.log('Listening to volunteer getTasks request');

  // Retrieve volunteer_id from the query parameters
  const volunteer_id = req.query.volunteer_id;

  console.log('Volunteer ID:', volunteer_id);

  const query = `
      BEGIN
          get_assigned_tasks(:volunteer_id, :result);
      END;
  `;

  try {
      const binds = {
          volunteer_id: volunteer_id,  // Bind the dynamic volunteer_id from the frontend
          result: { type: oracledb.CURSOR, dir: oracledb.BIND_OUT }  // SYS_REFCURSOR bind
      };

      // Execute the query and fetch rows
      const rows = await run_query(query, binds, true);

      // Debugging the fetched rows
      console.log('Fetched rows:', rows);

      // Process the rows and format the tasks
      const tasks = rows.map((row, index) => ({
          //requestNo: index + 1,

          requestId: row.ID,
          requestType: row.REQUEST_TYPE,   // Adjust based on actual column names
          emailAddress: row.EMAIL_ADDRESS,
          phone: row.PHONE,
          institutionType: row.INSTITUTION_TYPE,
          institutionName: row.INSTITUTION_NAME,
          requestDate: row.REQUEST_DATE
      }));

      res.json(tasks); // Send the tasks as JSON to the frontend
  } catch (error) {
      console.error('Error fetching tasks:', error);
      res.status(500).send('Error fetching tasks');
  }
});





// Handle accept task
app.post('/acceptTask/:id', async (req, res) => {
  const taskId = req.params.id;
  // Write logic to update the task status to accepted in the database
  console.log('accepted',taskId);
  res.send(`Task ${taskId} accepted`);
});

// Handle reject task
app.post('/rejectTask/:id', async (req, res) => {
  const taskId = req.params.id;
  // Write logic to update the task status to rejected in the database
  console.log(rejected);
  res.send(`Task ${taskId} rejected`);
});



task_management.html


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.1.0/remixicon.css">
    <link href='https://fonts.googleapis.com/css?family=Libre Baskerville' rel='stylesheet'>
    <link href='https://fonts.googleapis.com/css?family=Alex Brush' rel='stylesheet'>
    <link href='https://fonts.googleapis.com/css?family=Raleway Dots' rel='stylesheet'>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"/>
    <link rel="stylesheet" href="style.css">
    <title>Task Management</title>
</head>
<body>
    <header class="header">
        <div class="header-3">
            <div class="upper">
               <div class="links">
                  <a href="#" class="fab fa-facebook-f"></a>
                  <a href="#" class="fab fa-twitter"></a>
                  <a href="#" class="fab fa-instagram"></a>
                  <a href="#" class="fab fa-linkedin"></a>
               </div>
               <div class="pages">
                   <p> new 
                       <a href="login.html" id="login-button">login</a>  |  
                       <a href="signup-donor.html" id="register-button">Sign Up</a>
                   </p>
               </div>
            </div>
        </div>
    
        <div class="header-1">
            <a href="index.html" class="logo">
                <img src="Images/waste.png" class="icon">Food Waste Reduction System
            </a>
            <div class="icons">
                <a href="#" id="search-btn" class="ri-search-line"></a>
                <a href="#" class="ri-heart-line"></a>
                <a href="#" id="profile-icon" class="ri-user-line"></a>
            </div>
        </div>
        <div class="header-2">
            <nav class="navbar">
                <a href="Volunteer.html">Home</a>
                <a href="task_management.html">Task Management</a>
                <a href="verification_history.html">Verification History</a>
                <a href="contact_admin.html">Contact Us</a>
            </nav>
        </div>
    </header>




    <div class="heading1">
        <h4>Task Management</h4>
    </div>

    <div class="container" style="max-width: 1500px;">
        <table>
            <thead>
                <tr>
                    <th>Request No</th>
                    <th>Request Type</th>
                    <th>Email Address</th>
                    <th>Phone</th>
                    <th>Institution Type</th>
                    <th>Institution Name</th>
                    <th>Request Date</th>
                    <th>Accept</th>
                    <th>Reject</th>
                </tr>
            </thead>
            <tbody id="taskTableBody">
                <!-- Dynamic rows will be inserted here by JavaScript -->
            </tbody>
        </table>
    </div>

    <section class="footer">
        <div class="box-container">
            <div class="box">
                <h3>Our Locations</h3>
                <a href="#"><i class="fas fa-map-marker-alt"></i>Dhaka</a>
                <a href="#"><i class="fas fa-map-marker-alt"></i>Chittagong</a>
                <a href="#"><i class="fas fa-map-marker-alt"></i>Rajshahi</a>
                <a href="#"><i class="fas fa-map-marker-alt"></i>Sylhet</a>
                <a href="#"><i class="fas fa-map-marker-alt"></i>Rangpur</a>
                <a href="#"><i class="fas fa-map-marker-alt"></i>Barishal</a>
                <a href="#"><i class="fas fa-map-marker-alt"></i>Khulna</a>
                <a href="#"><i class="fas fa-map-marker-alt"></i>Mirsharai</a>
            </div>

            <div class="box">
                <h3>Quick Links</h3>
                <a href="Donor_home.html"><i class="fas fa-arrow-right"></i>Home</a>
                <a href="#"><i class="fas fa-arrow-right"></i>Donation History</a>
                <a href="#"><i class="fas fa-arrow-right"></i>Contact Us</a>
            </div>
            <div class="box">
                <h3>Extra Links</h3>
                <a href="#"><i class="fas fa-arrow-right"></i> Account Info</a>
                <a href="#"><i class="fas fa-arrow-right"></i> Privacy Policy</a>
                <a href="#"><i class="fas fa-arrow-right"></i> Services</a>
            </div>
            <div class="box">
                <h3>Contact Info</h3>
                <a href="#"><i class="fas fa-phone"></i> +880-1678-345-901</a>
                <a href="#"><i class="fas fa-phone"></i> +880-1528-345-704</a>
                <a href="#"><i class="fas fa-envelope"></i>fwrs23@gmail.com</a>
            </div>
        </div>
        <div class="share">
            <a href="#" class="fab fa-facebook-f"></a>
            <a href="#" class="fab fa-twitter"></a>
            <a href="#" class="fab fa-instagram"></a>
            <a href="#" class="fab fa-linkedin"></a>
            <a href="#" class="fab fa-pinterest"></a>
        </div>
    </section>

    <div class="profile-modal" id="profile-modal">
        <p>Username: <span class="username">Maisha</span></p>
        <p>Email: <span class="email">maisha99@gmail.com</span></p>
        <a href="#" class="btn"  id="logoutButton">Log Out</a>
    </div>
    
    <!-- Overlay -->
    <div class="overlay" id="overlay"></div>
    <script src="images/scrollreveal.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
    <script src="/Volunteer/task_management.js"></script>
    <script src="../admin.js"></script>
    <script src="../session.js"></script>

</body>
</html>



task_management.js


document.addEventListener("DOMContentLoaded", async () => {
    const tableBody = document.getElementById('taskTableBody');

    try {
        const vid = await getSessionVolunteerId();  // Fetch session volunteer ID
        console.log('volunteer',vid);
        const response = await fetch(`http://127.0.0.1:5000/volunteer/getTasks?volunteer_id=${vid}`);
        const tasks = await response.json();  // Parse response as JSON
        console.log(tasks);
        
        tasks.forEach(task => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${task.requestId}</td>
                <td>${task.requestType}</td>
                <td>${task.emailAddress}</td>
                <td>${task.phone}</td>
                <td>${task.institutionType}</td>
                <td>${task.institutionName}</td>
                <td>${new Date(task.requestDate).toLocaleDateString()}</td>
                <td>
                    <button class="accept-btn" data-id="${task.requestId}" data-type="${task.requestType}">Accept</button>
                </td>
                <td>
                    <button class="reject-btn" data-id="${task.requestId}" data-type="${task.requestType}">Reject</button>
                </td>
            `;
            tableBody.appendChild(row);
        });

        // Handle Accept or Reject button click
        tableBody.addEventListener('click', async (event) => {
            if (event.target.classList.contains('accept-btn') || event.target.classList.contains('reject-btn')) {
                const requestId = event.target.getAttribute('data-id');
                const requestType = event.target.getAttribute('data-type');
                const status = event.target.classList.contains('accept-btn') ? 'Y' : 'N';  // Y for accepted, N for rejected
                
                console.log(`Request ID: ${requestId}, Request Type: ${requestType}, Status: ${status}`);

                await updateTaskStatus(requestId,requestType ,status);  // Update status in database
                removeTaskFromTable(event.target);  // Remove task from the table
            }
        });

    } catch (error) {
        console.error('Error fetching tasks:', error);
    }
});

async function updateTaskStatus(requestId, requestType,status) {
    try {
        const response = await fetch(`http://127.0.0.1:5000/volunteer/updateTaskStatus/${requestId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ authenticity: status,reqType:requestType })
        });
        if (!response.ok) {
            throw new Error('Failed to update task status');
        }
        console.log(`Task ${requestId} status updated to ${status}`);
    } catch (error) {
        console.error('Error updating task status:', error);
    }
}

function removeTaskFromTable(button) {
    const row = button.closest('tr');
    row.remove();
}

async function getSessionVolunteerId() {
    try {
        const response = await fetch('http://127.0.0.1:5000/admin/current-user', {
            method: 'GET',
            credentials: 'include'
        });
        if (response.ok) {
            const user = await response.json();
            return user.id;
        } else {
            console.error('Failed to fetch user info');
        }
    } catch (error) {
        console.error('Error fetching user info:', error);
    }
}
